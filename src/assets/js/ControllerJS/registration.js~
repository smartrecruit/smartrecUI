myapp.controller("RegistrationController",function($scope, $http, $q,$compile){
	$scope.Checked=true;	
	
	/*-Check FILE Isvalid-*/
    $scope.ChechFileValid = function (file) {
        $scope.isValid = false;  
        if (file.length!=0) {
            for (i = 0; i < file.length; i++) {
                if (file[i] != "") {
                    if ((file[i].type == 'image/png' || file[i].type == 'image/jpeg' || file[i].type == 'image/gif') && file[i].size <= (512 * 1024)) {
                        $scope.isValid = "true";
                    }
                    else {
                        $scope.isValid = "false";
                        break;
                    }
                }
            }
        }
        $scope.IsFileValid = $scope.isValid;
    };
    /*-End Check File Valid-*/
	
	
	/*-File Uploading-*/
	$scope.SelectedFileForUpload = [];
	$scope.selectFileforUpload = function (file) {		
        $scope.FileForUpload = file[0];
		$scope.SelectedFileForUpload.push($scope.FileForUpload);
	/* 	 
		var elems = $('.fileinput-remove'),
		$parent = elems.parent();
		elems.attr('ng-click', 'removeFile()');
		//$compile(elems.html())($scope);
		//var ele = $compile(elems.html())($scope);
		$compile(elems.html())($scope); */
		
    }
	/*-End of File Uploading-*/
	
	/*-Save Registration-*/
	$scope.RegistrationAccount=function(accountRegistration){
		$scope.Registration=[];
		var len=$scope.SelectedFileForUpload.length;
		$scope.ChechFileValid($scope.SelectedFileForUpload);
		
		if ($scope.IsFileValid) {			
			if(accountRegistration!=undefined){
				$scope.Registration=accountRegistration;
				
				if(accountRegistration.username && accountRegistration.email && accountRegistration.password && accountRegistration.rePassword && accountRegistration.firstName && accountRegistration.surname){
									
					var data = {
						id:1711,
						username:accountRegistration.username,
						firstname:accountRegistration.firstname,
						surname:accountRegistration.surname,
						email:accountRegistration.email,
						password:accountRegistration.password,
						registertype:'Evaluator'
					};
					//http://localhost:3000/evaluators/removeEvaluator/567  \\\\\\\\\ Delete the record \\\\\\\\\\\\\\\\\
					
					$http.post('http://localhost:3000/evaluators/register', data) 
						.success(
							function(success){
								console.log(success);
							})
						.error(
							function(error){
								console.log(error);
							});
					 
				}
			}			
		}
	}
	/*-End of Save Registration-*/
});

myapp.directive('passwordValidate', function () {
    return { 
        require: 'ngModel',
        link: function (scope, elm, attrs, ctrl) {
            ctrl.$parsers.unshift(function (viewValue) {

                scope.pwdValidLength = (viewValue && (viewValue.length >= 8 && viewValue.length <= 16) ? 'valid' : undefined);
                scope.pwdHasLowerLetter = (viewValue && /[a-z]/.test(viewValue)) ? 'valid' : undefined;
                scope.pwdHasUpperLetter = (viewValue && /[A-Z]/.test(viewValue)) ? 'valid' : undefined;
                scope.pwdHasNumber = (viewValue && /\d/.test(viewValue)) ? 'valid' : undefined;
                scope.pwdHasSpecialCharacter = (viewValue && /[$@#!%*?&]/.test(viewValue)) ? 'valid' : undefined;

                if (scope.pwdValidLength && scope.pwdHasLowerLetter && scope.pwdHasUpperLetter && scope.pwdHasNumber && scope.pwdHasSpecialCharacter) {
                    ctrl.$setValidity('pwd', true);
                    return viewValue;
                } else {
                    ctrl.$setValidity('pwd', false);
                    return undefined;
                }

            });
        }
    };
});
myapp.directive('emailValidate', function () {
    return {
        require: 'ngModel',
        link: function (scope, elm, attrs, ctrl) {
            ctrl.$parsers.unshift(function (viewValue) {

                scope.emailHasAt = (viewValue && /[@]/.test(viewValue)) ? 'valid' : undefined;
                scope.emailHasDot = (viewValue && /[.]/.test(viewValue)) ? 'valid' : undefined;
                scope.emailValid = (viewValue && /^[\w\-\.\+]+\@[a-zA-Z0-9\.\-]+\.[a-zA-z0-9]{2,4}$/.test(viewValue)) ? 'valid' : undefined;

                if (scope.emailHasAt && scope.emailHasDot && scope.emailValid) {
                    ctrl.$setValidity('email', true);
                    return viewValue;
                } else {
                    ctrl.$setValidity('email', false);
                    return undefined;
                }

            });
        }
    };
});
myapp.directive("compareTo",  function () {
    return {
        require: "ngModel",
        scope: {
            otherModelValue: "=compareTo"
        },
        link: function (scope, element, attributes, ngModel) {

            ngModel.$validators.compareTo = function (modelValue) {
				//scope.errormsg="Error";
                return modelValue == scope.otherModelValue;
            };

            scope.$watch("otherModelValue", function () {
                ngModel.$validate();
            });
        }
    };
   
});

